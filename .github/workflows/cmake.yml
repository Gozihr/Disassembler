name: CMake

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - run: sudo apt install libcapstone-dev nasm mingw-w64 libedit-dev
      if: matrix.os == 'ubuntu-latest'
    - run: brew install capstone nasm mingw-w64 
      if: matrix.os == 'macOS-latest'
    - run: choco install python3 nasm
      if: matrix.os == 'windows-latest'
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    #NOTE: this is temporary until i understand a bit more why i can't build binutil
    # Monitored with issue-32 https://github.com/farzonl/Disassembler/issues/32
    - name: Configure CMake (Mac)
      if: matrix.os == 'macOS-latest'
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
    
    - name: Configure CMake (Linux\Windows)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_INT_TESTS=true

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test (Unix-like)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macOS-latest'
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./src/test/Disassembler_TEST
    
    - name: Test Windows
      if: matrix.os == 'windows-latest'
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./src/test/Release/Disassembler_TEST.exe
